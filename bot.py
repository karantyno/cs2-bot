import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"  # –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
players = []

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üî• –í—Å—Ç—É–ø–∏—Ç—å –∏ –Ω–µ —Å—Å–∞—Ç—å"), KeyboardButton(text="üéÆ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É")],
        [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"), KeyboardButton(text="‚öî –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥")]
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –ö–Ω–æ–ø–∫–∞ "–í—Å—Ç—É–ø–∏—Ç—å –∏ –Ω–µ —Å—Å–∞—Ç—å"
@dp.message(lambda message: message.text == "üî• –í—Å—Ç—É–ø–∏—Ç—å –∏ –Ω–µ —Å—Å–∞—Ç—å")
async def join_game(message: types.Message):
    await message.answer("–ö—Ä–∞—Å–∞–≤—á–∏–∫! –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏ - '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É'")

# –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É" –∏ –∫–æ–º–∞–Ω–¥–∞ /join
@dp.message(lambda message: message.text == "üéÆ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É" or message.text == "/join")
async def join_tournament(message: types.Message):
    if len(players) < 12:
        if message.from_user.full_name not in players:
            players.append(message.from_user.full_name)
            await message.answer(f"‚úÖ {message.from_user.full_name} –∑–∞–ø–∏—Å–∞–Ω! ({len(players)}/12)")
            
            # –ê–≤—Ç–æ—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –ª–æ–±–±–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ
            if len(players) == 12:
                for player in players:  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É
                    await bot.send_message(message.chat.id, "üî• –õ–æ–±–±–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ! –ó–∞–ø–∏—Å—å –∑–∞–∫—Ä—ã—Ç–∞, –≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –±–æ—é!")
        else:
            await message.answer("‚ö†Ô∏è –í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã!")
    else:
        await message.answer("‚ùå –õ–æ–±–±–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!")

# –ö–Ω–æ–ø–∫–∞ "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" –∏ –∫–æ–º–∞–Ω–¥–∞ /players
@dp.message(lambda message: message.text == "üìã –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" or message.text == "/players")
async def list_players(message: types.Message):
    if players:
        await message.answer("üìú –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:\n" + "\n".join(players))
    else:
        await message.answer("‚ùå –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ø–∏—Å–∞–ª—Å—è.")

# –ö–Ω–æ–ø–∫–∞ "–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥" (–∑–∞–≥–ª—É—à–∫–∞, –ø–æ–∫–∞ –±–µ–∑ –ª–æ–≥–∏–∫–∏)
@dp.message(lambda message: message.text == "‚öî –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥")
async def teams_division(message: types.Message):
    await message.answer("‚öî –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
